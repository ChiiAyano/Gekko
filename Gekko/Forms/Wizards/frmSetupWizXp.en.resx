<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="nextButton.Text" xml:space="preserve">
    <value>&amp;Next &gt;</value>
  </data>
  <data name="previousButton.Text" xml:space="preserve">
    <value>&lt; &amp;Back</value>
  </data>
  <data name="cancelButton.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="firstPanel.Size" type="System.Drawing.Size, System.Drawing">
    <value>735, 325</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>"GmailChecker - Gekko -" - Initial Setup Wizard</value>
  </data>
  <data name="pictureBox1.Size" type="System.Drawing.Size, System.Drawing">
    <value>186, 325</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>This wizard will guide you to setup easily Gekko's basic configurations consisting of minimum settings to work.



Press [Next] to continue.</value>
  </data>
  <data name="fiSelectSoundButton.Text" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="fiSelectSoundListenButton.Text" xml:space="preserve">
    <value>L&amp;isten</value>
  </data>
  <data name="fiDefaultSoundCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>349, 16</value>
  </data>
  <data name="fiDefaultSoundCheck.Text" xml:space="preserve">
    <value>Use the Windows &amp;default sound of the arrival of new messages.</value>
  </data>
  <data name="fiSelectSoundCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>152, 16</value>
  </data>
  <data name="fiSelectSoundCheck.Text" xml:space="preserve">
    <value>Specify a short WAV file.</value>
  </data>
  <data name="label16.Size" type="System.Drawing.Size, System.Drawing">
    <value>371, 12</value>
  </data>
  <data name="label16.Text" xml:space="preserve">
    <value>Play the new emails sound in the sound properties window on Windows.</value>
  </data>
  <data name="fiDefaultSoundListenButton.Text" xml:space="preserve">
    <value>&amp;Listen</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>Any WAV files will do but you cannot indicate how long to play, so you should not select long sounds.</value>
  </data>
  <data name="fiSoundUseCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>167, 16</value>
  </data>
  <data name="fiSoundUseCheck.Text" xml:space="preserve">
    <value>&amp;Play a sound on indications.</value>
  </data>
  <data name="fiTitleLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>407, 12</value>
  </data>
  <data name="fiTitleLabel.Text" xml:space="preserve">
    <value>Gekko can play a short WAV file when indicating the arrival of new messages.</value>
  </data>
  <data name="label14.Size" type="System.Drawing.Size, System.Drawing">
    <value>555, 12</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Gekko shows the pop-up window on the lower right of the display to indicate the arrival of new messages. </value>
  </data>
  <data name="foPopupCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>102, 16</value>
  </data>
  <data name="foPopupCheck.Text" xml:space="preserve">
    <value>&amp;Pop-up Window</value>
  </data>
  <data name="label13.Text" xml:space="preserve">
    <value>Gekko uses the baloon window from Gekko's icon in the task tray to indicate the arrival of new messages. This option cannot be selected when baloon indicatons are unavailable, or on Windows Me or earlier.</value>
  </data>
  <data name="foBalloonCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>100, 16</value>
  </data>
  <data name="foBalloonCheck.Text" xml:space="preserve">
    <value>&amp;Baloon Window</value>
  </data>
  <data name="label12.Size" type="System.Drawing.Size, System.Drawing">
    <value>304, 12</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>Specify how Gekko indicates the arrival of new messages.</value>
  </data>
  <data name="label11.Size" type="System.Drawing.Size, System.Drawing">
    <value>93, 12</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>min. (1 - 60 min.)</value>
  </data>
  <data name="label10.Size" type="System.Drawing.Size, System.Drawing">
    <value>183, 12</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Specify the mail-checking interval.</value>
  </data>
  <data name="label9.Location" type="System.Drawing.Point, System.Drawing">
    <value>21, 231</value>
  </data>
  <data name="label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>260, 12</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>You may add more accounts on the later settings.</value>
  </data>
  <data name="scTestResultLabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>162, 12</value>
  </data>
  <data name="scTestResultLabel.Text" xml:space="preserve">
    <value>The result will be shown here. </value>
  </data>
  <data name="scTestButton.Text" xml:space="preserve">
    <value>Connection &amp;Test</value>
  </data>
  <data name="label8.Size" type="System.Drawing.Size, System.Drawing">
    <value>195, 12</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Then, test if the account is available.</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>56, 12</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>&amp;Password:</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>252, 12</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Enter the account you want Gekko to check out.</value>
  </data>
  <data name="fiSelectSoundDialog.Title" xml:space="preserve">
    <value>Select sound file</value>
  </data>
  <data name="lastPanel.Size" type="System.Drawing.Size, System.Drawing">
    <value>735, 325</value>
  </data>
  <data name="label18.Text" xml:space="preserve">
    <value>Minimum settings are done. Other configurations can be set from the menu on the main console window: Main - Basic Configuration.



Press [Finish] to show the main console.</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>"GmailChecker - Gekko -" - Initial Setup Wizard Finished.</value>
  </data>
  <data name="pictureBox3.Size" type="System.Drawing.Size, System.Drawing">
    <value>186, 325</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Initial setup wizard</value>
  </data>
</root>